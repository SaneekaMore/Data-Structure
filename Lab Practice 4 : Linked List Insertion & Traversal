class Node {
    int data;
    Node next;

    Node(int data) {
        this.data = data;
        this.next = null;
    }
}

public class Main {
    public static int count(Node head) {
        int count = 0;
        Node current = head;

        while (current != null) {
            count++;
            current = current.next;
        }
        return count;
    }

    public static void baz(Node head) {
        if (head == null)
            return;
        baz(head.next != null ? head.next.next : null);
        System.out.print(head.data + " ");
    }

    public static void main(String[] args) {
        Node head = new Node(1);
        head.next = new Node(2);
        head.next.next = new Node(3);
        head.next.next.next = new Node(4);
        head.next.next.next.next = new Node(5);
        head.next.next.next.next.next = new Node(6);

        System.out.println("Number of nodes: " + count(head));

        baz(head);
    }
}


2) Consider the following function baz() that takes a pointer to the first node of a linked list. void baz (link head)


{ 
if (head == NULL)
return ;
baz
(head->next->next) ;
printf (“%d ”,
head->key) ; 
}

It will print 1 3 5

What will be printed when the function is called with the linked list shown below?
Head -> 1 - > 2 -> 3 -> 4 -> 5-> 6 -||

baz(Head) will be 3 5
